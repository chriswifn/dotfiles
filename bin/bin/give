#!/usr/bin/bash

# Description:  Script to share files in depending on what mood
#               I am in
# Dependencies: curl, python3
# Author:       Christian Hageloch

# ----------------------------- Main Part ----------------------------

# share githubusercontent links
# not idiot prove, no additional tests
x.git() {
  _filter "$@" && return $?
  local branch
  branch="$(git branch --show-current)"
  remote="$(git config --get remote.origin.url)"

  if [[ $remote =~ github\.com(:|\/)([^\/]+)\/([^\/]+) ]]; then
    local entity=${BASH_REMATCH[2]}
    local repo="${BASH_REMATCH[3]%.*}"
    local file="${1#./}"
    echo "https://raw.githubusercontent.com/$entity/$repo/$branch/$file"
  fi
}

# share files/text over ix.io
x.ix() {
  if [[ -n "$1" ]]; then
    exec curl -s "ix.io/$1"
    exit 0
  fi
  url="$(curl -s -F 'f:1=<-' http://ix.io)"
  echo "$url" | wl-copy
  echo "$url"
}

# share files over local network
# really only here to transfer files to other devices/
# other people at university
x.private() {
  local ip
  ip="$(hostname --ip-addresses)"
  local dir
  dir="$(mktemp -d)"
  cp "${@}" "$dir/" && cd "$dir/" || exit 1
  echo "http://${ip}:8000"
  python3 -m http.server
}

# ------------------------- Helper functions -------------------------
_filter() {
  [[ -n "$1" ]] && return 1
  while IFS= read -ra args; do
    "${FUNCNAME[1]}" "${args[@]}"
  done
}

# ---------------------------- Completion ----------------------------
while IFS= read -r line; do
  [[ $line =~ ^declare\ -f\ x\. ]] || continue
  COMMANDS+=( "${line##declare -f x.}" )
done < <(declare -F)
mapfile -t COMMANDS < \
  <(LC_COLLATE=C sort < <(printf "%s\n" "${COMMANDS[@]}"))

if [[ -n $COMP_LINE ]]; then
  line=${COMP_LINE#* }
  for c in "${COMMANDS[@]}"; do
    [[ ${c:0:${#line}} == "${line,,}" ]] && echo "$c"
  done
  exit
fi

# ---------------------------- Delegation ----------------------------
if [[ -n "$1" ]]; then
  declare CMD="$1"; shift
  for c in "${COMMANDS[@]}"; do
    if [[ $c == "$CMD" ]]; then
      "x.$CMD" "$@"
      exit $?
    fi
  done
fi
